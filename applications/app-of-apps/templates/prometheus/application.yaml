apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 60.2.0
    chart: kube-prometheus-stack

    helm:
      valuesObject:
        kube-state-metrics:
          podAnnotations:
            linkerd.io/inject: enabled
        prometheus-node-exporter:
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
        prometheusOperator:
          podAnnotations:
            linkerd.io/inject: enabled
        alertmanager:
          alertmanagerSpec:
            podMetadata:
              annotations:
                linkerd.io/inject: enabled
        prometheus:
          prometheusSpec:
            podMetadata:
              annotations:
                linkerd.io/inject: enabled
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 10Gi
        grafana:
          podAnnotations:
            linkerd.io/inject: enabled
          persistence:
            enabled: true
            size: 2Gi
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt"
            hosts:
              - grafana.d3adb5.net
            tls:
              - hosts:
                  - grafana.d3adb5.net
                secretName: grafana-tls
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.prometheus.namespace }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
