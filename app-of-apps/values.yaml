repository:
  url: https://github.com/d3adb5/argo-applications

argocd:
  namespace: argo-cd

metallb:
  namespace: metallb
  ipSharingKey: &metallb-sharing-key metallb-single-ip
  speaker:
    tolerations:
      - key: purpose
        operator: Equal
        value: storage
        effect: NoSchedule

ingress:
  namespace: ingress

certManager:
  namespace: cert-manager

longhorn:
  namespace: longhorn
  defaultSettings:
    taintToleration: "purpose=storage:NoSchedule"
  ingress:
    host: longhorn.d3adb5.net
    ingressClassName: nginx
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
  tolerations:
    - key: purpose
      operator: Equal
      value: storage
      effect: NoSchedule

prometheus:
  namespace: prometheus

minecraft:
  namespace: minecraft

vault:
  namespace: vault

plex:
  namespace: media
  image:
    registry: lscr.io
    repository: linuxserver/plex
    tag: latest
    pullPolicy: Always
  config:
    storageClassName: longhorn-nvme
    storageSize: 2Gi
  service:
    type: NodePort
    nodePort: 32400
  ingress:
    enabled: true
    ingressClassName: nginx
    url: plex.d3adb5.net
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
  extraVolumes:
    - name: media-library
      persistentVolumeClaim:
        claimName: media-library
  extraVolumeMounts:
    - name: media-library
      mountPath: /media/tv
      subPath: tv
    - name: media-library
      mountPath: /media/movies
      subPath: movies
  extraEnv:
    # If redeploying, generate a new claim token through https://www.plex.tv/claim/
    PLEX_CLAIM: "claim-gn9iLXVVLsg11o8Zzuac"
    HOSTNAME: Plexgu
    PUID: 1000
    PGID: 1000
    VERSION: docker
    TZ: America/Vancouver

transmission:
  namespace: media
  valuesObject:
    persistence:
      config:
        storageClass: longhorn-nvme
    ingress:
      enabled: true
      className: nginx
      host: transmission.d3adb5.net
      tls:
        enabled: true
        secretName: transmission-tls
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
    peerService:
      type: NodePort
      nodePort: 32555
      port: 32555
    extraEnv:
      - name: TZ
        value: America/Vancouver
      - name: PUID
        value: "1000"
      - name: PGID
        value: "1000"
    extraVolumes:
      - name: media-library
        persistentVolumeClaim:
          claimName: media-library
    extraVolumeMounts:
      - name: media-library
        mountPath: /downloads
        subPath: torrents

sonarr:
  namespace: media
  valuesObject:
    image:
      repository: lscr.io/linuxserver/sonarr
      tag: latest
      pullPolicy: Always
    persistence:
      config:
        storageClass: longhorn-nvme
    service:
      port: 8989
    ingress:
      enabled: true
      host: sonarr.d3adb5.net
      className: nginx
      tls:
        enabled: true
        secretName: sonarr-tls
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
    extraEnv:
      - name: TZ
        value: America/Vancouver
      - name: PUID
        value: "1000"
      - name: PGID
        value: "1000"

radarr:
  namespace: media
  valuesObject:
    image:
      repository: lscr.io/linuxserver/radarr
      tag: latest
      pullPolicy: Always
    persistence:
      config:
        storageClass: longhorn-nvme
    service:
      port: 7878
    ingress:
      enabled: true
      host: radarr.d3adb5.net
      className: nginx
      tls:
        enabled: true
        secretName: radarr-tls
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
    extraEnv:
      - name: TZ
        value: America/Vancouver
      - name: PUID
        value: "1000"
      - name: PGID
        value: "1000"
