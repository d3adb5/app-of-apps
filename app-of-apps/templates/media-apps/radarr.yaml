apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: radarr
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: media
  source:
    repoURL: {{ .Values.helmRepos.d3adb5 }}
    targetRevision: 1.1.0
    chart: stateful

    helm:
      valuesObject:
        podAnnotations:
          linkerd.io/inject: enabled
        replicaCount: 1
        image:
          repository: lscr.io/linuxserver/radarr
          tag: "5.6.0@sha256:79053c07400eec909d04ac97db760c30bf61471ec37465a50f126a3c825a92bc"
          pullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 512Mi
        service:
          port: 7878
        ingress:
          enabled: true
          host: radarr.d3adb5.net
          className: nginx
          tls:
            enabled: true
            secretName: radarr-tls
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
        extraEnv:
          - name: TZ
            value: America/Vancouver
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
        extraVolumes:
          - name: movies-library
            persistentVolumeClaim:
              claimName: {{ .Values.media.libraries.movies.claimName }}
        extraVolumeMounts:
          - name: movies-library
            mountPath: /downloads
          - name: config
            mountPath: /config
        extraVolumeClaimTemplates:
          - metadata:
              name: config
            spec:
              accessModes: [ "ReadWriteOnce" ]
              storageClassName: longhorn-nvme
              resources:
                requests:
                  storage: 512Mi

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.media.namespace }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
