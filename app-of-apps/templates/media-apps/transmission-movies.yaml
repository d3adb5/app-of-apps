apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: transmission-movies
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: media
  source:
    repoURL: {{ .Values.helmRepos.d3adb5 }}
    targetRevision: 0.1.0
    chart: transmission

    helm:
      valuesObject:
        image:
          repository: lscr.io/linuxserver/transmission
          pullPolicy: IfNotPresent
          tag: "4.0.5@sha256:c6a95f014f7ec812c9173be5a0afef4656e7c09be1c2d063786f42bdc3ee3d8a"
        podAnnotations:
          linkerd.io/inject: enabled
        replicaCount: 1
        resources:
          requests:
            cpu: 350m
            memory: 2Gi
          limits:
            cpu: 350m
            memory: 2Gi
        persistence:
          config:
            storageClass: longhorn-nvme
        ingress:
          enabled: true
          className: nginx
          host: movies.transmission.d3adb5.net
          tls:
            enabled: true
            secretName: transmission-movies-tls
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
        peerService:
          type: NodePort
          nodePort: 32666
          port: 32666
        extraEnv:
          - name: PEERPORT
            value: "32666"
          - name: TZ
            value: America/Vancouver
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
        extraVolumes:
          - name: movies-library
            persistentVolumeClaim:
              claimName: {{ .Values.media.libraries.movies.claimName }}
        extraVolumeMounts:
          - name: movies-library
            mountPath: /downloads
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values: [ transmission ]
                topologyKey: kubernetes.io/hostname

  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.media.namespace }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - RespectIgnoreDifferences=true

  ignoreDifferences:
    - kind: Secret
      name: transmission-movies-web-secret
      jsonPointers:
        - /data/USER
        - /data/PASS
